- 描绘软件结构的图形工具有：层次图，HIPO图，结构图
- 软件开发的瀑布模型，一般划分为：分析，设计，编码，测试
- 软件需求规约(SRS)能起到的作用是：1，作为客户与软件开发团队之间签订正式合同的基础。2，为软件项目的成本时间风险评估提供依据。3，通过形成需求基线，支持需求的演化与变更
- DFD，数据流图，他从数据传递和加工角度，以图形方式来表达系统的逻辑功能，数据在系统内部的逻辑流向和逻辑变化过程，是结构化系统分析方法的主要表达工具及用于表示软件模型的一种图示方法。
- 判断覆盖是设计足够多的测试用例，使得程序中的每一个判断至少获得一次“真”和一次“假”，即使得程序流程图中的每一个真假分支至少被执行一次
- 条件覆盖是指选择足够的测试用例，使得运行这些测试用例后，要使每个判断中的每个条件的可能取值至少满足一次，但未必能覆盖全部分支。
- 软件生命周期是指软件产品从提出，实现，使用维护到停止使用退役的过程
- 内聚是从功能角度来度量模块内的联系，一个好的内聚模块应当恰好做一件事。它描述的是模块内的功能联系。耦合是软件结构中模块之间的相互连接的一种度量，耦合强弱取决于模块间接口的复杂程度，进入或访问一个模块的点以及通过接口的数据。
- 数据管理技术是指对数据进行分类，编码，储存，检索和维护，它是数据处理的中心问题。在计算机硬件软件的发展基础上，数据管理技术经历了人工管理，文件系统，数据库系统3个阶段。
- 软件生命周期包括：需求分析，软件设计，程序编码，软件测试，运行维护。
- 单一职责原则告诉我们实现类要职责单一。里氏替换原则告诉我们不要破坏继承体系。以来倒置原则告诉我们要面向接口编程。接口隔离原则告诉我们在设计接口的时候要精简单一。迪米特法则告诉我们还要降低耦合。而开闭原则是总纲，它告诉我们要对扩展开放，对修改关闭。
- 原型法是指在获取一组基本的需求定义后，利用高级软件工具可视化的开发环境，快速的建立一个目标系统的最初版本，并把它交给用户试用，补充和修改，在进行新的版本开发。反复进行这个过程，直到得出系统的“精确解”，既用户满意为止的一种方法。
- 类图：展现了一组对象，接口，协作和它们之间的关系。
- 对象图：展现了一组对象以及它们之间的关系。
- 用例图：展现了一组用例，参与者以及她们之间的关系。
- 交互图：用于描述对象间的交互关系，由一组对象和他们之间的关系组成，包含他们之间可能传递的消息
- 状态图：由状态，转换，事件和活动组成，描述类的对象所有可能的状态以及事件发生时的转移条件
- 活动图：一种特殊的状态图，展现了系统内的一个活动到另一个活动的流程。
- 组件图：展现了一组组件的物理结构和组件之间的依赖关系。
- 部署图：展现了运行处理节点以及其中的组件的配置。
- MVC：M(model，模型)，表示数据已经处理数据的业务逻辑。V(view，视图)，是对模型的展示(数据可视化)，它渲染模型的结果，典型的是一个用户接口元素。C(control，控制器)，控制器介于用户和系统之间，他接受用户的输入，指挥着模型和视图来完成输入对应的任务。
- 模块独立性：指的是模块内部各部分及模块间的关系的一种衡量标准，由内聚和耦合来度量。
- 单元测试：指对软件中的最小可测试单元进行检查和验证。单元就是人为规定的最小的被测功能模块。单元测试是在软件开发过程中要进行的最低级别的测试活动，软件的独立单元将在与程序的其他部分相隔离的情况下进行测试。
- 软件生存周期：一个软件从提出开发要求开始直到该软件报废为止的整个时期。包括(软件定义，软件开发，软件的运行维护)可行性分析和项目开发计划，需求分析，概要设计，详细设计，编码，测试，维护(是软件生存周期中最长的阶段)
- 黑盒测试：黑盒测试也称功能测试，它是通过测试来检测每个功能是否都能正常使用。黑盒测试着眼与程序外部结构，不考虑内部逻辑结构，主要针对软件界面和软件功能进行测试。
- 黑盒测试的常用方法：1，等价类划分方法。2，边界值分析方法。3，错误推测方法。4，因果图方法。5，判定表驱动分析方法。6，正交实验设计方法。7，功能图分析方法
- 

